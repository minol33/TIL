### watch 형식
```javascript
watch( source, callback, options)

source
watcher data source는 값을 리턴하는 getter function이거나 직접적으로 ref일 수 있다.

const count = ref(0)
watch(() => state.count, (newCount, oldCount) => {
  // do Something
})

기본 타입
ref()를 사용하는 경우 count를 그대로 넘긴다.

// 기본타입 watch 
const count = ref(0)
watch(count, (newCount, oldCount) => {
   console.log("Old Count:" + oldCount)
   console.log("New Count"  + newCount)
})

count.value = 11  // 값이 변하면 watch  실행 

객체 타입
reactive()를 사용하는 경우 getter function을 사용한다. state 변수를 그대로 넘기는 것이 아니라 () => state.count와 같이 넘긴다.

// 객체 타입 watch
const state = reactive({ count: 0})
watch(() => state.count, (newCount, oldCount) => {
  console.log("Old Count:" + oldCount)
  console.log("New Count"  + newCount)
})
state.count = 13333 // 값이 변하면 watch 실행 

https://velog.io/@latte_h/Vue3-Guide-15-computed-%EC%99%80-watch

