// Header names in Express are auto-converted to lowercase

let token = req.headers['x-access-token'] || req.headers['authorization'];

// Remove Bearer from string
token = token.replace(/^Bearer\s+/, "");
if (token) {
	jwt.verify(token, config.secret, (err, decoded) => {
		if (err) {
			return res.json({ success: false, message: 'Token is not valid' });
		}
		req.decoded = decoded;
		next();
	});
} else {
	return res.json({
		success: false,
		message: 'Token not provided'
	});
}


https://sso-feeling.tistory.com/809
https://jodev.kr/entry/React-axios%EB%A5%BC-%EC%82%AC%EC%9A%A9%ED%95%98%EC%97%AC-%ED%86%A0%ED%81%B0-%EA%B0%B1%EC%8B%A0-%ED%9B%84-%ED%97%A4%EB%8D%94%EB%A5%BC-%EB%B3%80%EA%B2%BD%ED%95%98%EB%8A%94-%EB%B0%A9%EB%B2%95


setTimeout, setInterval

https://dev-racoon.tistory.com/11

< axios.interceptors >

// axios.interceptors.response.use(
//     (response) => { return response; },
//     (error) => { const { config, response: { status }, } = error

//     const originalRequest = config

//     if ( status === 401 ) {
//         if(refreshToken){

//             const refreshToken = sessionStorage.getItem('refreshToken')
//             let frm = new FormData()
//             frm.append('refreshToken', refreshToken)
//             axios.post('user/refresh/token', frm)
//             .then((res) => {
//                 let accessToken = res.data.data[0].accessToken
//                 let refreshToken = res.data.data[0].refreshToken
//                 sessionStorage.setItem('accessToken', accessToken)
//                 sessionStorage.setItem('refreshToken', refreshToken)
                
//             originalRequest.headers = { 'Content-type': 'application/x-www-form-urlencoded' }
//             originalRequest.headers = { 'Authorization': 'Bearer ' + sessionStorage.getItem('accessToken') }
//             window.location.reload();
//             console.log('token refresh !')
//             return axios(originalRequest)
//             }).catch(() => {
//                 alert("로그인이 필요합니다")
//                 window.location.href= '/login'; 
//             })
//         }
//     }
//     return Promise.reject(error)
//     }
// )
